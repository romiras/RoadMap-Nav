RoadMap - a street navigation system using the US Census maps and GPS
---------------------------------------------------------------------

                           R E A D M E

            By Pascal Martin (pascal.martin@iname.com)


INTRODUCTION:

   RoadMap is a program for Linux that displays street maps. The maps
   are provided by the US Census Bureau, and thus only cover the US.

   RoadMap has been designed to be usable on both a desktop or laptop
   computer, or on a PDA such as the iPAQ from HP (formely from COMPAQ)
   or the Sharp Zaurus.
   
   In its current version, RoadMap can work with either the Gtk+ 1.2,
   Gtk 2.0, GPE, QT/X11 or QT/QPE graphic environments. The QT environment
   --especially its QT/QPE version--is used for the Zaurus port (but
   could probably be used with OPIE), the Gtk 1.2 environment is being
   phased out (due to its old age). The most stable environment is the
   Gtk 2.0 one (this is the one used by the author). The GPE support is
   and optional extension of the Gtk 2.0 environment and is still very
   experimental.

   RoadMap is at an early stage of development. At this time all the
   features have not been implemented yet. RoadMap can display the map
   around a specified street address, track a GPS position and identify
   the current street and the next intersection. A basic trip support is
   provided (waypoints and destination). RoadMap will detect what is the
   next waypoint, provide a direction indicator and show the distance to
   the waypoint (and/or the destination).
   
   The plan for the future is to implement some navigation features similar
   to those found in commercial car navigation systems, and to port RoadMap
   to as many environment as possible.

   RoadMap uses a binary file format for representing the maps that is
   compact enough to allow the storage of many maps on a Compact Flash or
   MultiMedia card. The map of Los Angeles county takes a little more than
   10 Mbytes of flash space. RoadMap comes with a set of tools to convert
   the US Census bureau data into its own map format.

   RoadMap is distributed with the map of San Francisco as an example of
   map. The complete set of maps is available at the following URL:
   
           http://roadmap.saignon.net/maps.html

   The RoadMap directory file (usdir.rdm) must be downloaded first, as
   RoadMap will not work without it.

   Please refrain from downloading all the US states at once, as the map
   files are huges and the bandwidth is expensive.
   
   If you do need the complete set, please drop an email to the author.


DEPENDENCIES:

   RoadMap gets the current location from a GPS receiver, using the NMEA 0183
   protocol. RoadMap is tested with a Garmin 38. The GPS receiver must be
   configured with the datum set to either NAD83 or WGS 84.

   RoadMap communicates with the GPS receiver using gpsd (a GPS communication
   daemon for UNIX). Therefore gpsd is required when using RoadMap. However
   gpsd is not required when building RoadMap, and it may run on a remote
   computer accessible through a TCp/IP network.

   RoadMap uses either GTK, GTK2 or QT for its user interface. One of these
   toolkits must be installed. RoadMap can be built for QT/QPE, but the
   RoadMap makefile for QT must be modified.


INSTALLATION:

   Roadmap comes either as a set of sources, or as a set of binary files,
   depending on which distribution you downloaded. RoadMap comes in three
   distribution formats:

      1- a binary tarball with executables for Linux/i686.
      2- a set of .ipk packages for Linux/armv4l (Linux/Familiar).
      3- a source tarball.

   The arm and i686 executables use the same map files. Please note that
   the map files are dependent on the computer's endianess: map files
   built on a Mac (PowerPC CPU) would not be compatible with an Intel or
   (small endian) ARM computer.

   Note: the main Gtk RoadMap executables (roadmap and roadgps) are
   built as "gtkroadmap" and "gtkroadgps", while the QT equivalent are
   built as "qtroadmap" and qtroadgps" to avoid a clash. These executables
   are installed under their "standard" names using symbolic links, so
   that only one version can be installed at a time (the reason is to
   share one roadmap.menu file..).

   A version of RoadMap for the Sharp Zaurus is available at:
   
            http://moria.ionkov.net/zaurus/zroadmap/
            
            
   INSTALLING FROM THE BINARY TARBALL:

   The binary distribution contains three sets of files: the directory
   src/gtk contains the executable files for Debian GNU/Linux (kernel 2.4)
   and the directory src contains the example map datafiles.

   The default RoadMap configuration is defined such that it is possible
   to run from the src subdirectory. For example, use: gtk/gtkroadmap


   INSTALLING FROM THE FAMILIAR PACKAGE:

   The RoadMap familiar distribution contains one .ipk package file. This
   package contains the RoadMap executables (roadmap and roadgps) as well as
   the configuration files for a Gtk 2.0 setup (such as the Familiar 0.7.1 GPE
   image). This package does not contain the map files or the map index file.

   If RoadMap is available from your feed:

      ipkg install roadmap-gtk2

   If you downloaded the ipk files on the iPAQ:

      ipkg install roadmap-gtk2_X.Y.Z_arm.ipk

   RoadMap is useless without maps. The maps can be downloaded from the
   web site (http://roadmap.saignon.net/maps.html or mirrors) or generated
   from the US Census Bureau's files (see later).

   It is strongly recommended you install the RoadMap maps on a CompactFlash
   or SD/MMC card, and not on the iPAQ internal flash. The reason is that
   the maps are way too big to be installed on the iPAQ flash. As configured,
   RoadMap will look for the maps either in
   
             /mnt/hda/share/roadmap or
             /mnt/card/share/roadmap.

   The set of maps for California represents more that 100 Mbyte of data,
   the whole US about 1.6 Gbyte. Unless you are the lucky owner of a large
   capacity CompactFlash, you will have to install a subset. A capacity of
   128 Mbyte is enough in most cases, 64 Mbyte might be enough if you do not
   travel far from home.

   To build the maps yourself, you need the Linux/i686 binary or the source
   tarball. See the next section for more details.


   INSTALLING FROM THE SOURCE TARBALL:

   It is also possible to rebuild RoadMap and the map files from scratch
   from the source distribution:

   1- Install the development libraries for Gtk+ 1.2, Gtk+ 2.0 or Qt.

   2- install the RoadMap's tarball:

      tar xzvf <tarball>

   3- Compile the map building tools:

      cd roadmap/src
      make build

   4- Compile roadmap for the Gtk, Gtk2 or the QT toolkit:

      cd gtk     -- if using the Gtk 1.2 toolkit
      make
      cd ..

      cd gtk2    -- if using the Gtk 2.0 toolkit
      make
      cd ..

      cd gtk2    -- if using GPE with the Gtk 2.0 toolkit
      make DESKTOP=GPE
      cd ..

      cd qt      -- if using the QT toolkit
      make
      cd ..

      cd qt      -- if using the QT/QPE toolkit
      make DESKTOP=QPE
      cd ..

      If you want to build all three versions of RoadMap, just type:
      make       -- This replaces steps 3 and 4.

      Note for QT users: the RoadMap QT module cannot be built with QT3.
      This is a problem with the linker: it seems that UNIX make cannot
      be used with QT3, the QT-specific "qmake" must be used instead..

      Note for developpers: using MODE=DEBUG causes RoadMap to be
      compiled in debug mode.

   5- download some maps from the US Census bureau:

         http://www.census.gov/geo/www/tiger/tiger2002/tgr2002.html

   This download can be automated by using the shell script
   roadmap/src/rdmdownload:

      rdmgenmaps <tiger-path> [<state-symbol> ..]

   CAUTION: THE COMMAND ABOVE DOWNLOADS THE TIGER 2002 FILES. TO DOWNLOAD
   THE TIGER 2000 FILES, USE THE format OPTIONS:

      rdmgenmaps <tiger-path> format=2000 [<state-symbol> ..]

   6- download the list of counties from the US Census bureau:

         http://www.census.gov/geo/tigerline/app_a02.txt

      (A version of app_a02.txt is also provided in directory src.)

   7- Build the maps:

      rdmgenmaps <tiger-path> [maps=<map-path>]

   This command processes all the Census Bureau files found in <tiger-path>
   and creates the map files for RoadMap in the <map-path> directory. There
   is one map file generated for each county.

      rdmgenmaps <tiger-path> [maps=<map-path>] <county> ..

   This other command processes only the listed counties. The county
   shall be identified by its FIPS (e.g. 06075 for San francisco, CA).

   CAUTION: THE DESCRIPTION ABOVE ASSUMES THE TIGER 2002 FORMAT. USE
   THE OPTION format=2000 TO CONVERT TIGER 2000 FILES. FOR EXAMPLE:

      rdmgenmaps <tiger-path> format=2000 [maps=<map-path>]


   The rdmgemaps tool is a shell script that extract the TIGER files from
   the downloaded ZIP files, invokes the buildmap tool and then cleans
   up the TIGER files. Last, rdmgemaps invokes the buildus tool to generate
   the US states & counties catalog. The main purpose of rdmgemaps is really
   to keep the TIGER files in compressed form, considering their huge size..


   The buildmap tool takes the TIGER files as input, processes one county
   at a time, and produces one RoadMap .rdm map file per county.

   The buildmap tool uses popt for parsing the command line arguments:
   the option --help gives more information about the available options.


   The buildus tool creates a catalog of maps that is used by RoadMap
   to combine all states & counties into a giant US map. It looks for
   (1) the file AllSt.txt and (2) the various existing RoadmMap maps.

   This is not a problem if the catalog references a map file that does not
   exists: this way it is possible to store locally only a small portion of
   the US maps. This is useful when using a PDA with limited storage space
   (like the iPAQ).

   The buildus tool uses popt for parsing the command line arguments:
   the option --help gives more information about the available options.

   10- run make to install roadmap:

      cd gtk        -- or gtk2 or qt, depending on your preferences.
      make install
      cd ..

   This last step installs the RoadMap executables. These executables
   and the maps should have been generated at their proper location in
   steps 3 to 8. The install is not required for running RoadMap: the
   programs and build tools) can run from the local directory as well.


ROADMAP APPLICATIONS:

   RoadMap includes the following applications:

   roadmap           This is the main application. It displays the map
   (gtk/gtkroadmap)  and can keep track of the current GPS position.

   roadgps           A very handy Gtk GPS console, inspired by the Garmin
   (gtk/gtkroadgps)  satellite status page, with a NMEA log capability.
                     Thanks to gpsd, roadgps and roadmap can be active
                     at the same time.

   buildmap          A program that takes the US Census Bureau files
                     as input and produces the map files used by roadmap.
                     This application is to be run once on a desktop or
                     beefed-up laptop to prepare the map files and is not
                     needed when using the maps.

   buildus           A program that takes a set of roadmap map files and
                     produce a directory file that helps roadmap choose
                     the map(s) to display according to the location or
                     city. This application is to be run once on a desktop
                     or laptop and is not needed when using the maps.

   dumpmap           Display the data tables from a map file. This application
                     is used for debug purposes only and is not needed when
                     using the maps.

   rdmgenmaps        A script to simplify the generation of the maps.


USING ROADMAP:

   COMMAND LINE OPTIONS:
   
   The RoadMap application accepts the following command line options:
   
   --location=LONGITUDE,LATITUDE
   
       Set the location point (see menu entry View/Show Location..).
       This option is sticky.

   --metric
   
       Use the metric system for all units. This option is sticky.

   --imperial
   
       Use the imperial system for all units. This option is sticky.

   --no-area
   
       Do not show the polygons (parks, hospitals, malls, airports, etc..).

   -geometry=WIDTHxHEIGHT
   --geometry=WIDTHxHEIGHT
   --geometry:WINDOW=WIDTHxHEIGHT
   
       Set the geometry of a specific RoadMap's window, according to its
       title. The two first forms set the size of the main windows
       (otherwise called "Main"). If the window's title include spaces,
       dashes can be used in place of the spaces (the goal here is to be
       shell friendly). This option is sticky.

   --no-toolbar
   
       Do not show the toolbar. This option is sticky.

   --square
   
       Show squares' boundaries using grey boxes. This option is for
       debug purpose only.

   --gps=URL
   
       Use a specific GPS source. This option is not sticky: it overrides
       the preferences setting this time, but the rpeferences setting is
       not modified. The main use of this option is to rerun GPS logs
       created using roadgps.

   --debug
   
       Print all informational and debug traces.

   --verbose
   
       Print all informational traces.

   --help

       Show a description of all command line options.

   The options marked as "sticky" remain in effect the next time RoadMap
   is run. The use of the option actually changes the RoadMap preferences.


   THE ROADMAP DISPLAY:

   The main RoadMap window shows the menu, the toolbar and the map's canvas.
   The toolbar is optional: all the commands are also available from the menu
   bar or from the keyboard or iPAQ buttons.

   When RoadMap starts, the map view reflects the previous session's mode
   If no session data is found, RoadMap tracks the current GPS position. It
   is possible to select another mode: show the current destination point
   (see the section "Managing Trips" below), show a specific location, track
   the GPS position with the north shown up, track the GPS position with the
   direction of movement shown up.

   When RoadMap is in GPS tracking mode, the map view will reflect the
   movement of the car so that the GPS sprite will remains at the predefined
   position (usually the center, but it is possible to move the position of
   the GPS sprite using the arrow keys). The map can be held to its current
   position: the hold command "freezes" the map view to its current location,
   but updates will continue, so that, for example, one should see the GPS
   sprite move away from the map's center. The hold mode make it easy to
   select streets and read street names while on the road. To come back to
   the original map view, this view must be reselected (for example by using
   the menu command Find / GPS position or the "G" toolbar button).

   Clicking on the map screen displays the name of the closest street (with
   the selected street block's range of address), road or freeway (if any).
   This display is shown for a limited amount of time (see preference
   "Highlight.Duration").

   RoadMap indicates the current street a few seconds after the GPS position
   reached the street. This display is also shown for a limited time. There
   are several conditions for RoadMap to "lock" on a new current street: the
   GPS location must have gone far enough from the previous street, if any
   (see preference Accuracy.Street); The GPS location must be close to the
   street (same preference as before); the same street must be "confirmed"
   by multiple readings (The main reason for these conditions is to avoid
   locking on streets at the intersections--see Accuracy.Confirm)

   RoadMap can also display 3 messages at the following corners of the map:
   bottom left, bottom right and top right (the top left corner is already
   used to show the orientation of the map). These messages can be defined
   by the user using RoadMap's specific format strings (see section
   "Configuring the RoadMap text and voice messages").


   VOICE INTERFACE:

   If the flite program has been installed, or if RoadMap was configured
   for an available speech application, RoadMap will complement the screen
   information with an audio one: Roadmap will "tell" the name of the street
   on the audio output device. As a general rule, RoadMap tries not to repeat
   the same message again, as frequent audio messages tend to border on the
   irritating side. Thus if the same street is selected more than once, the
   screen information will be displayed each time, but the voice messge
   will be provided only once. As voice messages tend to take a significant
   time to be produced, RoadMap memorizes the latest message requested while
   the current message was produced and will 'air" it after the current
   message has been completed. Only one message is stored that way, the last
   requested one: any message generated in between is ignored.

   It is possible to mute the RoadMap's voice, using the File / Mute Voice
   item from the menu bar. The voice can be enabled later using the File /
   Enable Voice item.

   Please note that it is possible to rebuild flite with a better voice than
   the default one. The flite source is available at the CMU web site:

                   http://www.speech.cs.cmu.edu/flite/

   The flite README file describes how to regenerate flite using another
   voice. Here is an example, courtesy of Scot Wilcoxon:

     cd flite
     make clean    # to remove old executable files
     ./configure --with-vox=cmu_us_kal16
     make


   KEY BINDINGS:

   Most of the RoadMap commands are available from the keyboard (so to answer
   requests from my loyal Zaurus fans :). In fact, the button and key bindings
   are common to all ports, but some buttons might not exist on some platforms.

   Please note that all the button and key bindings are case insensitive, i.e.
   the same binding applies to 'A' and 'a' (as well as to "Button-Left" and
   "button-left"--whatever it means).

   On a desktop or laptop (or on the Zaurus), the keyboard keys are mapped
   as follow:

   Button-Left          Move the map view to the left.
   Button-Right         Move the map view to the right.
   Button-Up            Move the map view up.
   Button-Down          Move the map view down.
   +                    Zoom in: enlarge the central part of the map.
   -                    Zoom out: show a larger area.
   A                    Show a specified address.
   B                    Start the trip back to the departure point.
   D                    Show the destination point.
   E                    Erase maps among those currently visible.
   F                    Toggle the full screen mode.
   G                    Show the GPS position.
   H                    Hold the map view in its current position.
   I                    Show a specified street intersection.
   L                    Show the last selected location.
   M                    Enable/Disable map download.
   N                    Create a new trip.
   O                    Open an existing trip.
   P                    Stop tracking the current trip.
   Q                    Quit RoadMap.
   R                    Set the map back to the default zoom level.
   S                    Start tracking the current trip.
   U                    Center the map on the GPS position (north up).
   W                    Set the selected street block as waypoint.

   The following bindings are somewhat specific to the iPAQ, but probably
   have straightforward equivalents on most PDA (such as the Zaurus):

   Button-Menu          Set the map back to the default zoom level.
   Button-Contact       Zoom in: enlarge the central part of the map.
   Button-Calendar      Zoom out: show a larger area.
   Button-Start         Quit RoadMap (the "Compaq" button on the iPAQ).

   The current bindings that are used by the application are printed after
   the options help information when the --help option is used.

   Note for Familiar 0.7.1 GPE users: the GPE environment has defined the
   buttons bindings In a way that makes it impossible for RoadMap to use
   them (the button are mapped to the GPE applications). In this environment
   it is recommended to enable the toolbar to replace the buttons. the joypad
   is still available.


   ON-THE-FLY MAP DOWNLOAD:

   Today's PDA have a limited storage space, which must be shared with MP3
   and other files. As the RoadMap maps can take up to 1.6 GB, most PDA users
   will want to install only the few maps they need. The on-the-fly download
   feature of RoadMap helps the user to select visually which maps to download
   or remove. RoadMap is capable of downloading compressed maps: gzip, bzip2
   or lzop compressed files are automatically recognized and uncompressed
   after transfer.

   The map download is available in a special RoadMap mode, which can be
   activated and deactivated using the Find / Map Download menu entry. On
   startup the download mode is always deactivated. RoadMap shows a red
   "download" icone on the right top corner of the map screen to indicate
   that the download mode has been activated.

   In the download mode, if a map is not found by the display engine, the
   user will be asked for the permission to download the file from the
   configured source (as defined in the preference item "Download.Source").
   The destination directory can also be configured (using the preferences
   item "Download.Destination"). Both the source and the destination file
   name can be edited manually before each download.

   RoadMap is designed to support multiple download protocols. The protocol
   is selected depending on the source string, as much as possible using
   the well-known URL syntax. Two protocols are available: a local file
   copy (the source is either a full path or a "file://*" URL) and the HTTP
   protocol (the source is a "http://*" URL). The local file copy protocol
   can be useful in some cases, for example when mounting the map server's
   disk using nfs or smbfs.

   If the suffix of the downloaded file matches a well-known compressed files
   suffix, RoadMap will invoke the appropriate tool to uncompress the file.
   The compression tools supported are gzip (.gz suffix), bzip2 (.bz2 suffix)
   and lzop (.lzo suffix). This feature makes it possible to store compressed
   maps on the server side. Using compressed files may reduce by a factor of
   two the time it takes to download the map, depending on the compression
   tool used, the specific map's content, etc.. Note that maps are always
   stored uncompressed: because RoadMap maps the file in memory, compressed
   file cannot be used by RoadMap.

   If the user cancels the download of a specific map, RoadMap will not
   request the same download again for the remainder of the session. This
   means that RoadMap will request the same maps again if stopped and then
   restarted. This was done because there is at this time no way for the
   user to change his mind and re-request the download of a cancelled map.
   This is a part of the user interface that is likely to change in the
   future.

   RoadMap also provides a dialog for deleting maps, activated through the
   Find / Delete Maps.. menu entry. The dialog shows the number of map files
   stored locally, the total size of the local maps and the list of maps
   currently visible on the RoadMap screen. The proper way for selecting
   maps to delete is to view an area you do not need anymore, hit the Find /
   Delete Maps.. entry, then select a specific county and hit the Delete
   button. The county will immediately disappear from the map screen and
   the dialog gets updated (i.e. the map statistics and the map list will
   reflect the latest delete action). Several counties can be deleted this
   way before the dialog is closed (button "Done").

   Note that a deleted map is automatically added to the "cancel download"
   list, so that RoadMap will not request for this map again. As such, it
   is not a problem to delete maps while the download mode is active. If
   you need to download again a map that was deleted, just restart RoadMap.

   A typical use of the download feature is to preload the maps you need
   before you go on a trip. Activate the download mode and select the
   destination address: RoadMap will request the download on the map that
   covers this destination. Zoom out the display to force the download of
   adjacent counties, if required. Repeat for each place you are likely to
   go to. Use the arrow keys or buttons to "fly over" the roads you are
   going to travel on. If you missed a map, and you did set a public map web
   server, it should be possible to download maps from an hotel's Internet
   access. Of course, if you are (rich and) lucky enough to have an Internet
   connection while on the road, the download feature can also be used at
   any time.

   Here is a typical setup using the HTTP protocol:

     1- Install the individual map files, gzip-compressed, in a "maps"
        subdirectory of the web server directory tree. Say the web
        server is named "desktop".

     2- Set the preference Download.Source to:
     
            http://desktop/maps/usc$05d.rdm.gz

     3- Set the preference Download.Destination to:
     
            /usr/local/share/roadmap

     4- Make sure the preference Map.Path does include the directory
        /usr/local/share/roadmap.


   WAYPOINTS AND ADDRESSES:

   RoadMap manages four types of points: a location point (selected using
   a street address or the mouse), the GPS position (updated automatically
   if a GPS fix is available), a destination point, and an arbitrary number
   of user-defined waypoints.

   One can select which one of these locations serves as the center of
   the map. The GPS and waypoints positions are special cases: see the
   section on trip management.

   The location point is really a buffer for the selection of a street
   block. Once selected, the point can be defined as a (new) waypoint or
   as the destination. Thus the definition of a destination or waypoint
   is a two step procedure: (1) select a location, and (2) set the selected
   point as a waypoint or the destination point (in the Trip menu).

   The location point can be entered in one of three ways:
   - by clicking on a location on the map,
   - by entering a valid USPS address (street number, name, city and state
     names) in the dialog launched by the "View / Show Location.." menu entry,
   - by specifying the intersection of two streets in the dialog launched
     by the "View / Show intersection.." menu entry.

   More details are provided in the following sections.


   STREET NAME OPTIONS:

   Street names are used in the two dialogs used to select a specific location:
   the address and intersection dialogs. These dialogs follow the same rules
   regarding the format of the names.

   When entering a street name, the street prefix, suffix and type, if provided,
   must be among the abbreviations listed by the US Census Bureau (N for north,
   E for east, Blvd for boulevard, etc..). In almost all cases, the US Census
   Bureau conventions follow the usual abbreviations, so there is no need to
   worry here. In addition, any of these fields is optional: not providing
   them only makes the search less selective. If several matches are found,
   RoadMap shows a list of all matching streets and lets the user select the
   appropriate one.

   The exact format of the data expected by RoadMap as a complete street name
   is as follow:

           [prefix ' '] name [[' ' suffix] ' ' type]

   The name itself may include space characters. Potential conflicts are
   resolved by excluding the prefix, suffix and type fields from the name
   only when a match is found with the valid set for that county. As such,
   the following names would work OK in any circumstances:

           N Rio del Sol St   --> RoadMap detects both a prefix and a type.
           Rio del Sol St     --> RoadMap detects the type, no valid prefix.
           N Rio del Sol      --> RoadMap detects the prefix, no valid type.
           Rio del Sol        --> RoadMap detects no valid prefix or type.

   Lets go through an example: we will search for 100 East Washington
   Boulevard in Los Angeles, California. The name of the street should be
   typed as follow:

           e washington blvd

   The 'e' stands for "east", 'blvd' stands for boulevard, according to the
   US Census Bureau documentation. Note that RoadMap is not case sensitive.

   The result is a single match, so RoadMap shows the location immediately
   without any additional question. However it is possible to omit either
   the prefix, street type, or both, with the effect of broadening the search.
   Let say we entered:

           washington blvd

   Now RoadMap display a dialog that lists 3 matches:

           Washington Blvd, Los Angeles
           W Washington Blvd, Los Angeles
           E Washington Blvd, Los Angeles

   The first item in the list is shown selected, and RoadMap displays a new
   location in the map display. In fact, each time the user selects one
   address in the list, RoadMap displays the corresponding map location.
   When the user hits the OK button, this simply confirms the current choice
   as the final one.

   Note that not providing a prefix, suffix or street type does broaden
   the search, but the street name must always be provided in full: at that
   time RoadMap provides only an exact street names search. Thus providing
   "wash" instead of "washington" only triggers the error message "No street
   with that name could be found".


   OTHER ADDRESS OPTIONS:

   It is possible not to specify the street number part of an address:
   in that case, all street blocks matching the street and city names will
   be listed. Be careful, that might make a long list, and RoadMap has a
   limit of 256 items per list (matching items beyond the 256th one are
   discarded).

   It is also possible to specify an approximate city search: if the city
   name is prefixed with a character '?', then the name of the city is used
   to find the county, but is not used in the street match: the idea is to
   list all similar addresses around (i.e. in the county). This is useful
   when one is not sure of the city name, or only knows the name of a city
   nearby.


   SELECTING AN INTERSECTION:

   The "View / Show intersection.." menu entry activates a dialog that
   requires two street names and a state name. RoadMap will search within
   the given state for all intersections between streets that match the
   street names provided. This search may take a few seconds, especially
   if the maps must be read from disk.

   In the (likely) case where multiple intersections have been found, RoadMap
   displays a list that shows the name of the city and the name of the county
   where each intersection is located. This selection list follows the same
   rules as the address selection list described in the previous sections.


   MANAGING TRIPS:
   
   A trip is made of one destination point and many user-defined waypoints.
   The purpose of a RoadMap trip is to describe a real-life trip and to
   provide the user information about the trip progress.
   
   RoadMap supports an infinite number of trips: each trip context is saved
   in a trip file. One trip at a time can be edited or activated. A saved
   trip can be reloaded from the trip file, of course. each trip support an
   infinite number of waypoints.

   The last trip created or loaded will be reloaded the next time RoadMap
   starts.
   
   A trip must have been loaded before it can be edited. There are three trip
   edition actions available in the "Trips" menu: set the destination point,
   add a waypoint or remove a waypoint. The destination point is defined
   using a street address by selecting the "Set Destination.." entry. A
   waypoint is added by highlighting a location on the map and then selecting
   the "Add as Waypoint" entry. Waypoints can be deleted by selecting the
   "Delete Waypoints.." entry, then selecting a specific waypoint and hitting
   the "Delete" button.

   A trip that has been created or loaded can then be activated. Activating
   a trip defines the departure point (the current GPS location) and
   enable the "trip display" mode, i.e. some trip information displayed on
   top of the map. These trip displays include an arrow beside the GPS
   location symbol to indicate the direction of the next waypoint (if any)
   or else of the destination, as well as user configurable messages, such
   as distance information, at the corners of the map. (see CONFIGURATION
   for more information about these user configurable messages).

   When a trip is active, RoadMap tracks the GPS position in realtime and
   updates its map accordingly. The GPS position can be shown in two modes:
   either North up, or GPS direction up. In the second case, the map is
   rotated according to the direction information received from the GPS.
   This dynamic rotation is in addition to the map manual rotation.

   A trip can be stopped at any time and then resumed. Resuming a trip
   does not modify the departure point. The trip can also be resumed in
   reverse mode: in that case the departure point and the destination
   point switch roles. Note that this does not modify the trip, only the
   way RoadMap uses the trip information. The reverse mode makes it
   possible to use the same RoadMap trip on the way back.

   When starting a trip, the map will rotate to match the orientation
   of the vehicule. This display mode is the most convenient as it matches
   the driver's or passenger's view. It is however possible to switch the
   display in the "North Up" mode by selecting the "Trips / Resume Trip
   (North Up)" menu entry.

   The reserve trip always works in the same mode as previously selected
   the last time the trip was started or resumed: for example, if the "North
   Up" mode was selected when the trip was resumed, then the reverse trip
   will still use this "North Up" mode.


   ROADMAP PREFERENCES:

   It is possible to edit the roadmap's preferences (select File/Preferences
   from the menu bar). Most preference items take effect only when roadmap
   start, so quitting roadmap is usually required. Editing the roadmap
   preferences requires a keyboard to be available. One way to configure
   the iPAQ preferences is to run roadmap from the iPAQ, redirected to the
   desktop's or laptop's X server.


USING ROADGPS:

   The RoadGps tool can be started on its own (using command line options
   similar to those of RoadMap), or from the RoadMap's File / GPS Console
   menu item.

   The screen shows the list of satellites, their position in the sky
   (north up) and the strength of the signal. It marks in reverse video
   those satellites used to compute the current position.

   More importantly, RoadGps allows to log all the NMEA sentences received.
   RoadGps rotates through up to 127 log files. The log file are created
   in /var/tmp, with the name formatted as: "roadgps-%d.log" (where %d
   represents an integer in the range 1..127).

   When RoadGps starts, the logging function is off. Whenever the logging
   function is turned on a new log file is created (if the logging function
   was already on, the current log file is closed and a new one is created).

   RoadGps uses a subset of the RoadMap preferences setup, but has no
   preferences editor of its own: configure RoadMap first, and then use
   RoadGps.


PORTING ROADMAP:

   The roadmap and roadgps applications have been designed so to facilitate
   portability. Two sub-parts of RoadMap have been isolated for that purpose:
   the graphic user interface and the OS interface.

   The graphic user interface is all defined by the following header files:

      roadmap_main.h           -- the application's main window.
      roadmap_canvas.h         -- the canvas used to draw the map.
      roadmap_dialog.h         -- the widget used to build dialogs.
      roadmap_messagebox.h     -- pre-built warning/error dialogs.
      roadmap_fileselection.h  -- a pre-built file selection dialog.

   The OS interface is defined by the following header files:

      roadmap_net.c            -- isolate socket interface oddities.
      roadmap_path.c           -- hides the OS syntax for file path.
      roadmap_file.c           -- primitives to access and map binary files.
      roadmap_time.c           -- primitive to get the local time.
      roadmap_spawn.c          -- hides the OS process control.
      roadmap_library.c        -- load and link to dynamic libraries.

   Implementations of the user interface for the Gtk, Gtk2 and Qt toolkits
   are provided, as well as one implementation of the OS interface for UNIX.

   Porting RoadMap to a new environment probably means to adapt the RoadMap
   make files and write new implementations for the functions defined in
   the header files listed above.


CONFIGURATION:

   FILES:
   
   The RoadMap configuration is stored in text files located in the following
   directories:

            /usr/share/roadmap
            /usr/local/share/roadmap
            ~/.roadmap (equivalent to "&" in RoadMap)
            ~/.roadmap/trips (equivalent to "&/trips" in RoadMap)
            ~/.roadmap/maps (equivalent to "&/maps" in RoadMap)

   The directory ~/.roadmap contains the user configuration: any user change
   to the configuration is written there. The items in the user configuration
   take precedence over the "default" configuration in the "shared" directories.

   The directory ~/.roadmap/trips is used as the default location for the
   trip files. Note that trip files can be stored anywhere, not only in
   ~/.roadmap/trips.

   The directory ~/.roadmap/maps contains map files specific for this user.
   As a general rule, it is not recommended for each user to have their
   own copy of the maps, as these maps take a lot of space. This directory
   can be used however when maps are downloaded on the fly, as shared maps
   are usually not writable for users. The local rules can be established so
   that either all users download maps into the shared repository, or else
   each user manages his own maps. On a PDA or on a personal desktop systems
   the first solution makes the more sense, but for public access computers
   (such as computers at an University) the second solution might be the most
   convenient.

   The user configuration directories are created when needed, if they do
   not exist.

   The syntax of most RoadMap configuration files is similar to the X
   ressources file format (the exceptions are the sprites file and the
   trip files). Each configuration item is represented by one line of text,
   using the following format:

            name ': ' value

   The following configuration files are used:

      schema          The definition of the geographic entities.
      preferences     User's preferences.
      session         The latest context used (locations)
      sprites         The definition of the graphic symbols

   The session file contains the state of roadmap, which is saved (if needed)
   when roadmap exits. The preferences file contains all the preferences
   items, and can be edited by the user. The schema file describes the
   geographic entities that are shown on the map; it should normally not be
   modified by the users. The sprites file contains the graphical definition
   of the symbols usd by RoadMap to indicates the various locations, to draw
   the compass, etc..


   CONFIGURING THE TEXT AND VOICE MESSAGES:
   
   The RoadMap text displays and voice messages can be configured by the
   user using format strings in the preferences. The format strings contain
   static and dynamic parts. The dynamic parts (or "macros") are specified
   using the character '%' followed by one character that denotes a predefined
   RoadMap variable:
   
   A:   estimated time of arrival (not yet implemented).
   B:   Route bearing (not yet implemented).
   D:   Distance to the destination time (set only when a trip is active).
   S:   Speed (set only when a trip is active).
   T:   Current time, format HH:MM (set only when a trip is active).
   W:   Distance to the next waypoint (set only when a trip is active).
   #:   the street number range to the selected or current street block.
   N:   the name of the selected or current street.
   C:   the name of the city for the selected or current street.
   F:   the full name (number, name, city) of the selected or current street.
   
   Example: "%D (%W)" shows the distance to the destination point, followed
   by the distance to the next waypoint (in parenthesis).
   
   A message is evaluated, and displayed, only when all referenced macros
   have a defined value. Therefore the example above will show nothing if
   there is no trip active, or if there is no next waypoint. It is possible
   to define several alternatives, separated by the character '|': the first
   alternative that has been successfully evaluated will be displayed.
   
   Example: "%D (%W)|%D" shows both distances to the destination point and
   to the next waypoint if both distances are defined, or else only the
   distance to the destination point if this distance is defined. If none
   of the two distance have been defined (for example when no trip is
   active), then no display is shown and/or no sound is produced.

   It is possible to "link" together parts of a string using simple or
   double quotes. This is used when the string specifies an external command
   to execute. RoadMap does not use the shell to execute commands (so to stay
   independent from the OS-specific shell syntax), but it does recognise the
   use of quotes to specify a command parameter that includes spaces. Such
   a parameter may be enclosed in single or double quotes. There is no
   difference between one quote or another, except that the parameter must
   be terminated with the same quote character it was started with.
 
   Example: "flite -t 'On %N'" to specify the command flite with two
   parameters ("-f" and "On %N").


   A NOTE REGARDING COLORS

   Some RoadMap configuration items define colors to be used. As a general
   rule a color must be described in a way that is suitable for the target
   graphic system.
   
   In the case of X11, that means either a color name (as defined in the
   /etc/X11/rgb.txt) or a color definition: #rrggbb where rr, gg and bb
   are hexadecimal values (for example: #FFFFFF is white, #000000 is black).

   Note that the #rrggbb format is broadly supported, even on target systems
   that do not support named colors.


   PREFERENCES ITEMS:

     General.Unit:

         Description: the unit system used, either "imperial" or "metric"
         Default: imperial

     General.Default Zoom:

         Description: the zoom level when roadmap is started.
         Format: integer
         Default: 60

     General.Keyboard:

         Description: show (yes) or hide (no) a keyboard on the screen.
         Format: boolean
         Default: yes

     General.Toolbar:

         Description: show (yes) or hide (no) the roadmap toolbar.
         Format: boolean
         Default: yes

     Geometry.Main:

         Description: sets the size of the RoadMap main window.
         Format: WIDTHxHEIGHT
         Default: 800x600

     Geometry.WINDOW:

         Description: sets the size of the RoadMap window named WINDOW.
         Format: WIDTHxHEIGHT
         Default: 300x200

     Display.Bottom Right:
     
         Description: define the message on the bottom right corner
         Format: RoadMap format string
         Default: %D (%W)|%D

     Display.Bottom Left:
     
         Description: define the message on the bottom left corner
         Format: RoadMap format string
         Default: %S

     Display.Top Right:
     
         Description: define the message on the top right corner
         Format: RoadMap format string
         Default: ETA: %A|%T

     Display.Duration:

         Description: The time during which a selection or message is shown.
         Format: number of seconds.
         Default: 10
         Comment: the selection is only removed when the map is redrawn.

     Map.Path:

         Description: the map database paths.
         Format: a comma-separated list of directory paths.
         Default: .,~/maps,/usr/share/roadmap/maps

     Map.Cache:

         Description: the number of entries in RoadMap's mapping cache.
         Format: integer
         Default: 8

     Map.Background:

         Description: the color used for the background of the maps.
         Format: color
         Default: LightYellow

     GPS.Background:

         Description: the background color for the RoadGps screen.
         Format: color
         Default: LightYellow
         Comment: this color is used by RoadGps, not by RoadMap.

     GPS.Foreground:

         Description: the foreground color for the RoadGps screen.
         Format: color
         Default: Black
         Comment: this color is used by RoadGps, not by RoadMap.

     GPS.Timeout:

         Description: a timeout for detecting that the GPS link is down.
         Format: number of seconds.
         Default: 10
         Comment: the GPS link is considered down if no new GPS data was
                  received for the specified amount of time.

     GPS.Source:

         Description: the URL that gives the address of the GPS data source.
         Format: gpsd://<hostname>[:<port>]
         Default: gpsd://localhost
         Comment: the syntax "file://<path>" is also possible, for debug.

     GPS.Color:

         Description: the color used for the current GPS position symbol
         Format: color
         Default: green
         Comment: this color is used by RoadMap, not by RoadGps.

     Destination.Color:

         Description: the color used for the destination symbol
         Format: color
         Default: red

     Selected Street.Background:

         Description: the color for the background of the selected street name.
         Format: color
         Default: yellow

     Selected Street.Foreground:

         Description: the color for the foreground of the selected street name.
         Format: color
         Default: black

     Selected Street.Text:

         Description: the format used for the selected street's display.
         Format: RoadMap format string
         Default: %F

     Console.Background:

         Description: the color used for the background of the trip display
         Format: color
         Default: yellow

     Console.Foreground:

         Description: the color used for the foreground of the trip display
         Format: color
         Default: black

     Current Street.Background:

         Description: the color for the background of the current street's name
         Format: color
         Default: DarkSeaGreen4

     Current Street.Foreground:

         Description: the color for the foreground of the current street's name
         Format: color
         Default: white

     Current Street.Text: %N, %C|%N

         Description: the text used to display the current street's name
         Format: color
         Default: black (I would recommend using white--see above)

     Voice.Current Street:

         Description: the command used to announce the current street's name
         Format: RoadMap format string
         Default: flite -t 'On %N'

     Voice.Selected Street:

         Description: the command used to announce the selected street's name
         Format: RoadMap format string
         Default: flite -t '%N'

     Accuracy.GPS Position:

         Description: GPS's estimated position error (worst case)
         Format: integer
         Default: 300
         Comment: the unit depends on the selected unit system (feet or meter).
                  the default here being for feet. This default accuracy
                  can be adjusted to the actual GPS estimate if a Garmin
                  GPS receiver is used.
                  This is not used yet (reserved for fuzzy logic navigation).

     Accuracy.GPS Speed:

         Description: GPS's speed accuracy.
         Format: integer
         Default: 4
         Comment: the unit depends on the selected unit system (ft/s or m/s).

     Accuracy.Confirm:

         Description: number of matches before assigning a current street.
         Format: integer
         Default: 3
         Comment: the purpose of using multiple matches is to avoid assigning
                  a crossing street as the current street because it was the
                  best match once.

     Accuracy.Mouse:

         Description: the size of the street selection search area
         Format: number of pixels
         Default: 20
         Comment: on a mouse click, RoadMap defines the street search area
                  as the rectangle delimited by the two points
                  (x-accuracy, y-accuracy) and (x+accuracy, y+accuracy).
                  Limiting the search to this area speeds up the process,
                  compared to searching in the whole screen area.

     Accuracy.Street:

         Description: the street selection accuracy.
                      one street to the other.
         Format: integer (using the current unit system).
         Default: 80
         Comment: This distance is used when switching to a new street.
                  The GPS position must be at a distance greater than the
                  accuracy from the current street, and at a distance lower
                  than the accuracy from the would be next current street.

     Shapes.Declutter:

         Description: the zoom level when the shapes are not drawn anymore.
         Format: integer
         Default: 1300
         Comment: the definition of this item is rather obscure. To be fixed.

     Polygons.Declutter:

         Description: the zoom level when the polygons are not drawn anymore.
         Format: integer
         Default: 1300
         Comment: the definition of this item is rather obscure. To be fixed.

     History.Depth: 100

         Description: the maximum number of items in the address history
         Format: integer
         Default: 100

     Approach.Background:
     Approach.Foreground:
     Approach.Text:
     Voice.Approach:

         Description: reserved for future use (approaching waypoint).

     Voice.Next Intersection:

         Description: reserved for future use (announcing next intersection).

     Download.Source:

         Description: the format used to generate the URL of the source.
         Format: printf() format, which must include the sequence "%05d".
         Default: /usr/local/share/roadmap/usc%05d.rdm
         Comment: this item is either a full path name (starting with a '/')
                  or an URL (such as "file://[...]" or "http://[...]").

     Download.Destination:

         Description: the path of the directory where to store the downloaded
                      file.
         Format: string
         Default: &/maps
         Comment: this item must be either a full path name or start with
                  '~' (user home directory) or '&' (RoadMap user's directory).


   SESSION ITEMS:

     Locations.Location

         Description: the latest selected position.
         Format: longitude ',' latitude.
         Default: -122394181,37794928
         Comment: the name of this item is kind of silly, to be changed.

     Locations.GPS

         Description: the latest received GPS position.
         Format: longitude ',' latitude.
         Default: -122394181,37794928

     Locations.Trip
     
         Description: the name of the last used trip file.
         Format: string
         Default: default
         
 (*) NOTE: the default position values match 1 Market St, San Francisco, CA.


   SCHEMA ITEMS:

     The schema file uses the same format as the preference file. It defines
     the properties of the various categories of objects that make a map.
     the list of categories matches the list of Tiger file's categories
     (see Tiger's CFCC field) that have been filtered by buildmap.

     The two differences with the preferences files are that there is no
     pre-defined category in RoadMap: categories are defined by the maps
     (FIXME: this is still to be done--as a temporary hack, the categories
     have been hardcoded somewhere) and there is no default value.

     For each category, RoadMap use the following items:

     <category>.Class:

         Description: the class of object this category belongs to.
         Format: Road, Feature or Area.
         Comment: Road and Feature categories are searched in the "line"
                  table of the map files and drawn as lines. The Road
                  category is searched when a street name is looked for.
                  The Area objects are drawn separatly, as polygons.

     <category>.Color:

         Description: the color used when drawing the objects.
         Format: color

     <category>.Declutter:

         Description: the zoom level from which the objects are not drawn.
         Format: integer
         Comment: the definition of this item is rather obscure. To be fixed.

     <category>.Thickness:

         Description: the thickness used to draw lines.
         Format: number of pixels

     RoadMap uses the following categories:

         Freeways
         Ramps
         Highways
         Streets
         Trails
         Rivers
         Shore
         Hospitals
         Malls
         Airports
         Stations
         Lakes
         Parks
         Sea


   SPRITES FILE:

     This file defines the drawing commands used to draw the various symbols
     used by RoadMap:

         GPS (indicates the current GPS position and direction),
         Position (indicates the currently selected location),
         Destination,
         Highlight (marks the endpoints of a selected street block) and
         Compass (used to indicates the direction of the North pole).

     The sprites file is made of a sequence of single-line commands:

         S <name>               Starts a sprite.

         F <color> <thickness>  Define the pen to be used by the subsequent
                                drawing commands.

         L <x>,<y> ..           Draw a line.
         P <x>,<y> ..           Draw a filled polygon.
         C <x>,<y> <radius>     Draw a circle.
         D <x>,<y> <radius>     Draw a disk (filled circle).

     The coordinates are pixel positions, relative to the sprites "hot point".


   TRIP FILES:
   
     A trip file contains the information relative to one trip. it uses
     a CSV format where each record describes a point and contains four
     fields: type, name, longitude, latitude.
     
     The type field is either "Destination" or "Waypoint".
     
     The name field is the name of the waypoint (the name of the destination
     is always "Destination").

     The following trip file example defines a trip from the Golden Gate's
     bridge to 1, Market St, in san Francisco, California:
     
     Destination,Destination,-122394181,37794928
     Waypoint,1000 - 1098 The Embarcadero  San Francisco,-122401781,37803934
     Waypoint,100 - 198 Richardson Ave  San Francisco,-122446481,37799826


TOOLS:

   A RoadMap map file is a small database of C tables. The tables are organized
   in a tree fashion and each table is identified by a path. One specific set
   of tables (the dictionary) groups all the names that appear in the map.

   RoadMap comes with a tool to display information extracted from a map file:

   dumpmap [--usage] [-d TABLE] [--strings] [--volume=NAME] [--search=NAME]

   dumpmap uses the popt library for parsing command line argument: the
   option --help provides a full description of each option. The name of
   map files must be provided after the options: dumpmap will process each
   provided file sequentially, according to the options that was selected.


APPENDIX: Configuration examples

~/.roadmap/preferences ("factory" defaults):

Accuracy.Confirm: 3
Accuracy.GPS: 1000
Accuracy.Mouse: 20
Accuracy.Street: 200
Approach.Background: yellow
Approach.Foreground: black
Approach.Text: Approaching %N, %C|Approaching %N
Console.Background: yellow
Console.Foreground: black
Current Street.Background: yellow
Current Street.Foreground: black
Current Street.Text: %N, %C|%N
Destination.Color: red
Display.Bottom Left: %S
Display.Bottom Right: %D (%W)|%D
Display.Top Right: ETA: %A|%T
Display.Duration: 10
General.Default Zoom: 20
General.Keyboard: no
General.Toolbar: yes
General.Unit: imperial
Geometry.Main: 800x600
Geometry.Preferences: 800x300
GPS.Background: LightYellow
GPS.Color: red
GPS.Foreground: black
GPS.Source: gpsd://localhost
GPS.Timeout: 10
History.Depth: 100
Map.Path: .,~/.roadmap,/usr/share/roadmap,/usr/local/share/roadmap
Map.Cache: 8
Map.Background: LightYellow
Polygons.Declutter: 1300
Selected Street.Background: yellow
Selected Street.Foreground: black
Selected Street.Text: %F
Shapes.Declutter: 1300
Voice.Approach: flite -t 'Approaching %N'
Voice.Current Street: flite -t 'On %N'
Voice.Next Intersection: flite -t 'Next intersection: %N'
Voice.Selected Street: flite -t '%N'


~/.roadmap/session ("factory" defaults):

Locations.Location: -122394181,37794928
Locations.GPS: -122394181,37794928
Locations.Trip: default

