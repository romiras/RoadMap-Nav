#!/bin/bash

usage()
{
    echo $program: invocation error >&2
    exit 1
}

me="&contact=pgf@foxharp.boston.ma.us"

# doit=echo

program=${0##*/}

: args: $*

server="www.overpass-api.de/api/xapi?*"
#server="overpass.osm.rambler.ru/cgi/xapi?*"


if ! opts="$(getopt -o t:b:h:B:x: \
	-l trutile:,bits:,have:,bbox:,xmlfile: -n $program -- $@)"
then
    usage
fi

eval set -- "$opts"

xmlfile="-"

while true
do
    : \$1 is $1
    case $1 in
	-t|--trutile) trutile=$2; shift 2 ;;
	-h|--have) have=$2; shift 2 ;;
	-b|--bits) bits=$2; shift 2 ;;
	-B|--bbox) bbox=$2; shift 2 ;;
	-x|--xmlfile) xmlfile=$2; shift 2 ;;
	--) shift; break ;;
	*) usage ;;
    esac
done

bbox="[bbox=$bbox]"

trap "rm -f $xmlfile.tmp" 0

if [ -e $xmlfile ]
then
    echo Already have $xmlfile
    exit
fi

case $xmlfile in
*.gz) want_compressed=1 ;;
esac

# for development, convenient to be able to get the .osm from
# somewhere on the local system, when maps targetted for somewhere
# else.
localstore=/usr/local/share/roadmap/newquads
want=qt$bits/${xmlfile##*/qt$bits}

if [ -e "$localstore/$want" ]
then
    cp -a $localstore/$want $xmlfile
    exit
fi

url="http://$server$bbox$query$me"

echo "Fetching from $url"

if [ "$want_compressed" ]
then
    wget_opt="--header=Accept-Encoding: gzip"
    if wget "$wget_opt" -O - "$url" >$xmlfile.tmp
    then
	case $(file $xmlfile.tmp) in
	*gzip*)
	    mv $xmlfile.tmp $xmlfile
	    ;;
	*)
	    echo "Note: download didn't use gzip encoding."
	    echo "Compressing now..."
	    gzip -c -d $xmlfile.tmp > $xmlfile
	    ;;
	esac
    fi
else
    if wget $wget_opt -O - "$url" >$xmlfile.tmp
    then
	mv $xmlfile.tmp $xmlfile
    fi
fi

